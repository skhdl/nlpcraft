swagger: "2.0"
info:
  description: REST API for [NLPCraft](https://nlpcraft.org) - an open source library for adding Natural Language Interface to any applications. For Data Model APIs see [Javadoc](https://nlpcraft.org/apis/latest/index.html) documentation.
  version: 0.4.0
  title: NLPCraft API
host: localhost:8081
basePath: /api/v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Authentication
    description: >-
      User signing in (getting access token), singing out and password reset.
  - name: Users
    description: >-
      Adding, removing and managing users.
  - name: Data Probe
    description: >-
      Managing data probes.
  - name: Asking
    description: >-
      Asking questions, checking results, clearing conversation context.
      Managing result notification endpoints.
paths:
  /clear/conversation:
    post:
      tags:
        - Asking
      summary: Clears conversation context.
      description: Clears conversation context for given user and data model.
      operationId: clearConversation
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
              - mdlId
            properties:
              acsTok:
                type: string
                description: Access token obtain via '/api/signin' call
                maxLength: 256
              mdlId:
                type: string
                maxLength: 32
                description: Data model ID for which to clear conversation context
              userId:
                type: integer
                format: int64
                description: User ID for which to clear conversation context. Optional, initiator ID used by default

      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /check:
    post:
      tags:
        - Asking
      summary: Gets status of submitted requests.
      description: Gets the status of the previously submitted requests. Request statuses returned sorted by their registration time, starting from newest.
      operationId: check
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
            properties:
              acsTok:
                type: string
                description: Access token obtain via '/api/signin' call
                maxLength: 256
              srvReqIds:
                type: array
                items:
                  type: string
                description: >-
                  Optional list of server request IDs to check - by default, all current user requests will be returned
              maxRows:
                type: integer
                format: int64
                description: Optional maximum number of returned items - by default all items will be returned
      responses:
        '200':
          description: Successful operation.
          schema:
            type: object
            required:
              - status
              - states
            properties:
              status:
                type: string
                description: Status code of this operation
                enum:
                  - API_OK
              states:
                type: array
                items:
                  type: object
                  required:
                    - srvReqId
                    - txt
                    - userId
                    - mdlId
                    - status
                    - error
                    - errorCode
                    - createTstamp
                    - updateTstamp
                  properties:
                    srvReqId:
                      type: string
                      description: Server request ID
                    txt:
                      type: string
                      description: Original request text
                    userId:
                      type: integer
                      format: int64
                      description: ID of the user that submitted the request
                    mdlId:
                      type: string
                      description: ID of the model
                    probeId:
                      type: string
                      description: ID of the data probe
                    status:
                      type: string
                      description: >-
                        Current status of this request (QRY_READY indicates that
                        result - error or ok - is ready)
                      enum:
                        - QRY_ENLISTED
                        - QRY_READY
                    resType:
                      type: string
                      description: >-
                        Optional result type if returned by model (provided only
                        if status is QRY_READY and processing was not rejected
                        or terminated due to an exception)
                    resBody:
                      type: object
                      description: >-
                        Optional body (string or JSON object) of the result if returned by model
                        (provided only if status is QRY_READY and processing was
                        not rejected or terminated due to an exception)
                    error:
                      type: string
                      description: >-
                        Optional error if returned by model (provided only if
                        status is QRY_READY and processing was rejected or
                        terminated due to an exception)
                    errorCode:
                      type: integer
                      format: int32
                      description: >-
                        Optional error code indicating a type of error. Only present
                        of 'error' field is present.
                    createTstamp:
                      type: integer
                      format: int64
                      description: Creation UTC/GMT timestamp of the request
                    updateTstamp:
                      type: integer
                      format: int64
                      description: Last update UTC/GMT timestamp of the request
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /cancel:
    post:
      tags:
        - Asking
      summary: Cancels a question.
      description: >-
        Cancels the previously submitted sentence. Must be called when query
        result is no longer needed (i.e. downloaded by all client apps) to release the server memory.
        Note that query results will auto-expire on server after certain period of time.
      operationId: cancel
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
            properties:
              acsTok:
                type: string
                description: Access token obtain via '/api/signin' call
                maxLength: 256
              srvReqIds:
                type: array
                items:
                  type: string
                description: Server IDs of the requests to cancel. Optional, all current user requests will be cancelled by default.
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /ask:
    post:
      tags:
        - Asking
      summary: Asks a question.
      description: Submits the sentence to be processed.
      operationId: ask
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
              - txt
              - mdlId
            properties:
              acsTok:
                type: string
                description: Access token obtain via '/api/signin' call
                maxLength: 256
              txt:
                type: string
                description: Text of the question
                maxLength: 1024
              mdlId:
                type: string
                description: >-
                  Model ID.
                maxLength: 32
              data:
                type: object
                description: >-
                  Additional sentence JSON data with maximum JSON length of 512000 bytes
      responses:
        '200':
          description: Successful operation.
          schema:
            type: object
            required:
              - status
              - srvReqId
            properties:
              status:
                type: string
                description: Status code of this operation
                enum:
                  - API_OK
              srvReqId:
                type: integer
                format: int64
                description: Server ID assigned to the new processing request
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /user/all:
    post:
      tags:
        - Users
      summary: Gets all users.
      description: Gets all users. Admin privileges required.
      operationId: getAllUsers
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
            properties:
              acsTok:
                maxLength: 256
                description: Access token obtain via '/api/signin' call
                type: string
      responses:
        '200':
          description: Successful operation.
          schema:
            type: object
            required:
              - status
              - users
            properties:
              status:
                type: string
                description: Status code of this operation
                enum:
                  - API_OK
              users:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - email
                    - firstName
                    - lastName
                    - avatarUrl
                    - isAdmin
                  properties:
                    id:
                      description: User ID
                      type: integer
                      format: int64
                    email:
                      description: User email
                      type: string
                    firstName:
                      description: User first or given name
                      type: string
                    lastName:
                      description: User last name
                      type: string
                    avatarUrl:
                      description: User avatar URL
                      type: string
                    isAdmin:
                      description: Whether or not user has admin privileges
                      type: boolean
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /user/update:
    post:
      tags:
        - Users
      summary: Updates regular user.
      description: >-
        Updates user with given ID or the current user with given parameters.
        Admin privileges required for updating other user.
      operationId: updateUser
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
              - firstName
              - lastName
            properties:
              acsTok:
                type: string
                description: Access token obtain via '/api/signin' call
                maxLength: 256
              id:
                description: >-
                  Optional ID of the user to update. Only administrators can
                  provide this parameter. User's own ID by default.
                type: integer
                format: int64
              firstName:
                type: string
                description: User first or given name
                maxLength: 64
              lastName:
                type: string
                description: User last name
                maxLength: 64
              avatarUrl:
                type: string
                description: Optional user avatar URL
                maxLength: 512000
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /user/delete:
    post:
      tags:
        - Users
      summary: Deletes user.
      description: >-
        Deletes user with given ID or the current user.
        Admin privileges required for deleting other user.
      operationId: deleteUser
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
            properties:
              acsTok:
                maxLength: 256
                description: Access token obtain via '/api/signin' call
                type: string
              id:
                description: >-
                  Optional ID of the user to delete. Only administrators can
                  provide this parameter. User's own ID by default.
                type: integer
                format: int64
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /user/admin:
    post:
      tags:
        - Users
      summary: Updates user admin permissions.
      description: >-
        Updates user's permissions with given ID or the current user.
        Admin privileges required for this operation.
      operationId: adminUser
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
              - isAdmin
            properties:
              acsTok:
                maxLength: 256
                description: Access token obtain via '/api/signin' call
                type: string
              id:
                description: >-
                  Optional ID of the user to update. Current user is used ID by default.
                type: integer
                format: int64
              isAdmin:
                description: Admin privileges flag to update to
                type: boolean
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /user/add:
    post:
      tags:
        - Users
      summary: Adds new regular user.
      description: Adds new user with given parameters. Admin privileges required.
      operationId: addUser
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
              - email
              - passwd
              - firstName
              - lastName
              - isAdmin
            properties:
              acsTok:
                type: string
                description: Access token obtain via '/api/signin' call
                maxLength: 256
              email:
                type: string
                description: User email
                maxLength: 64
              passwd:
                type: string
                description: User password
              firstName:
                type: string
                description: User first or given name
                maxLength: 64
              lastName:
                type: string
                description: User last name
                maxLength: 64
              avatarUrl:
                type: string
                description: Optional user avatar URL
                maxLength: 512000
              isAdmin:
                type: boolean
                description: Admin flag
      responses:
        '200':
          description: Successful operation.
          schema:
            type: object
            required:
              - status
              - userId
            properties:
              status:
                type: string
                description: Status code of this operation
                enum:
                  - API_OK
              userId:
                type: integer
                format: int64
                description: ID of the newly created user
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /endpoint/register:
    post:
      tags:
        - Asking
      summary: Register push notification HTTP endpoint.
      description: >-
        Register session HTTP endpoint for push notification on query results.
        HTTP endpoint will receive exactly the same object that is returned by '/check' call.
        When user signs out all endpoints registered will be removed.
      operationId: registerEndpoint
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
              - endpoint
            properties:
              acsTok:
                type: string
                description: Access token obtain via '/api/signin' call
                maxLength: 256
              endpoint:
                type: string
                description: User endpoint URL.
                maxLength: 2083
      responses:
        '200':
          description: Successful operation.
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Status code of this operation
                enum:
                  - API_OK
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /endpoint/remove:
    post:
      tags:
        - Asking
      summary: Removes push notification HTTP endpoint.
      description: >-
        Removes session push notification HTTP endpoint, if any.
        Note that when user signs out all endpoints registered will be removed.
      operationId: removeEndpoint
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
              - endpoint
            properties:
              acsTok:
                type: string
                description: Access token obtain via '/signin' call
                maxLength: 256
              endpoint:
                type: string
                description: User endpoint URL.
                maxLength: 2083
      responses:
        '200':
          description: Successful operation.
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Status code of this operation
                enum:
                  - API_OK
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /endpoint/removeAll:
    post:
      tags:
        - Asking
      summary: Removes all push notification HTTP endpoints.
      description: >-
        Removes all push notification HTTP endpoints.
      operationId: removeEndpoints
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
            properties:
              acsTok:
                type: string
                description: Access token obtain via '/api/signin' call
                maxLength: 256
      responses:
        '200':
          description: Successful operation.
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Status code of this operation
                enum:
                  - API_OK
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /signin:
    post:
      tags:
        - Authentication
      summary: Signs in and obtains new access token.
      description: >-
        Accepts user's email and password and returns a **new access** token
        that should be used in all subsequent API calls. An access token can
        expire or be invalidated on the server side and this call should be used
        to obtain it again in such cases.
      operationId: signIn
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - email
              - passwd
            properties:
              email:
                maxLength: 64
                description: User sign in email.
                type: string
              passwd:
                maxLength: 64
                description: User password.
                type: string
      responses:
        '200':
          description: Successful operation.
          schema:
            type: object
            required:
              - status
              - acsTok
            properties:
              status:
                type: string
                description: Status code of this operation
                enum:
                  - API_OK
              acsTok:
                type: string
                description: >-
                  Temporary (session) access token that should be used for
                  further REST calls
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /signout:
    post:
      tags:
        - Authentication
      summary: Signs out and releases access token.
      description: >-
        Releases previously obtained access token. After this call given access
        token is no longer valid for authentication.
      operationId: signOut
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
            properties:
              acsTok:
                maxLength: 256
                description: Previously obtained access token to release.
                type: string
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /passwd/reset:
    post:
      tags:
        - Authentication
      summary: Resets password for the user.
      description: >-
        Resets the password for the user. Note that NLPCraft doesn't store password in reversible way
        and there is no way to retrieve the current password - user can only reset the password.
      operationId: passwdReset
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
              - newPasswd
            properties:
              acsTok:
                maxLength: 256
                description: Previously obtained access token to release.
                type: string
              id:
                description: >-
                  Optional ID of the user to reset password. Only admins
                  can provide this parameter. User's own ID by default.
                type: integer
                format: int64
              newPasswd:
                type: string
                description: User password
                maxLength: 64
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
  /probe/all:
    post:
      tags:
        - Data Probes
      summary: Gets all probes.
      description: >-
        Gets metadata for all active (currently connected) probes. Admin privileges required.
      operationId: getAllProbes
      parameters:
        - in: body
          name: Payload body
          description: JSON request.
          required: true
          schema:
            type: object
            required:
              - acsTok
            properties:
              acsTok:
                maxLength: 256
                description: Access token obtain via '/api/signin' call
                type: string
      responses:
        '200':
          description: Successful operation.
          schema:
            type: object
            required:
              - status
              - probes
            properties:
              status:
                type: string
                description: Status code of this operation
                enum:
                  - API_OK
              probes:
                type: array
                items:
                  type: object
                  required:
                    - probeToken
                    - probeId
                    - probeGuid
                    - probeApiVersion
                    - probeApiDate
                    - osVersion
                    - osName
                    - osArch
                    - startTstamp
                    - tmzId
                    - tmzAbbr
                    - tmzName
                    - userName
                    - javaVersion
                    - javaVendor
                    - hostName
                    - hostAddr
                    - macAddr
                    - models
                  properties:
                    probeToken:
                      description: Probe token
                      type: string
                    probeId:
                      description: Probe ID (user defined ID)
                      type: string
                    probeGuid:
                      description: Probe GUID (globally unique internal ID)
                      type: string
                    probeApiVersion:
                      description: Probe API version
                      type: string
                    probeApiDate:
                      description: Probe API date
                      type: string
                    osVersion:
                      description: OS version
                      type: string
                    osName:
                      description: OS name
                      type: string
                    osArch:
                      description: OS architecture
                      type: string
                    startTstamp:
                      description: Start time in UTC.
                      type: integer
                      format: int64
                    tmzId:
                      description: Timezone ID
                      type: string
                    tmzAbbr:
                      description: Timezone abbreviation
                      type: string
                    tmzName:
                      description: Timezone name
                      type: string
                    userName:
                      description: User name
                      type: string
                    javaVersion:
                      description: Java version
                      type: string
                    javaVendor:
                      description: Java vendor
                      type: string
                    hostName:
                      description: Host name
                      type: string
                    hostAddr:
                      description: Host address
                      type: string
                    macAddr:
                      description: MAC address
                      type: string
                    models:
                      description: Models
                      type: array
                      items:
                        type: object
                        required:
                          - id
                          - name
                          - version
                        properties:
                          id:
                            description: Model ID (unique, immutable ID)
                            type: string
                          name:
                            description: Model name (descriptive name of this model)
                            type: string
                          version:
                            description: Model version
                            type: string
        '400':
          description: Failed operation.
          schema:
            $ref: '#/definitions/Error'
definitions:
  Ok:
    type: object
    required:
      - status
    properties:
      status:
        type: string
        description: Status code of this operation
        enum:
          - API_OK
  Error:
    type: object
    required:
      - status
    properties:
      status:
        type: string
        description: Status code of this error
        enum:
          - NC_UNKNOWN_ACCESS_TOKEN
          - NC_SIGNIN_FAILURE
          - NC_NOT_IMPLEMENTED
          - NC_INVALID_FIELD
          - NC_ADMIN_REQUIRED
          - NC_INVALID_OPERATION
          - NC_ERROR
          - NC_UNEXPECTED_ERROR
      reason:
        type: string
        description: Reason for this error
