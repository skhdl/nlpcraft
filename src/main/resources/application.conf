#
#  “Commons Clause” License, https://commonsclause.com/
#
#  The Software is provided to you by the Licensor under the License,
#  as defined below, subject to the following condition.
#
#  Without limiting other conditions in the License, the grant of rights
#  under the License will not include, and the License does not grant to
#  you, the right to Sell the Software.
#
#  For purposes of the foregoing, “Sell” means practicing any or all of
#  the rights granted to you under the License to provide to third parties,
#  for a fee or other consideration (including without limitation fees for
#  hosting or consulting/support services related to the Software), a
#  product or service whose value derives, entirely or substantially, from
#  the functionality of the Software. Any license notice or attribution
#  required by the License must also include this Commons Clause License
#  Condition notice.
#
#  Software:    NLPCraft
#  License:     Apache 2.0, https://www.apache.org/licenses/LICENSE-2.0
#  Licensor:    Copyright (C) 2018 DataLingvo, Inc. https://www.datalingvo.com
#
#      _   ____      ______           ______
#     / | / / /___  / ____/________ _/ __/ /_
#    /  |/ / / __ \/ /   / ___/ __ `/ /_/ __/
#   / /|  / / /_/ / /___/ /  / /_/ / __/ /_
#  /_/ |_/_/ .___/\____/_/   \__,_/_/  \__/
#         /_/
#

# NLPCraft server configuration root.
server {
    # Database configuration.

    # Supported Ignite database, which used by default and doesn't require configuration or
    # Also mysql, postgres and oracle databases can be configured.
    database {
        # jdbc {
        #     # MySQL URL and driver.
        #     # Note that MySQL driver dependencies should be added to the project,
        #     # and scripts sql/mysql should be executed.
        #     # Tested under MySQL 5.7.17.
        #     url = "jdbc:mysql://localhost:3306/nlpcraft"
        #     driver = com.mysql.jdbc.Driver
        #     username = <user>
        #     password = <password>
        # }

        # jdbc {
        #     # Postgres URL and driver.
        #     # Note that Postgres driver dependencies should be added to the project,
        #     # and scripts sql/postgres should be executed.
        #     # Tested under Postgres 9.6.9.
        #     url = "jdbc:postgresql://localhost:5432/nlpcraft"
        #     driver = org.postgresql.Driver
        #     username = nlpcraft
        #     password = nlpcraft
        # }

        # jdbc {
        #     # Oracle URL and driver.
        #     # Note that Oracle driver dependencies should be added to the project,
        #     # and scripts sql/oracle should be executed.
        #     # Tested under Oracle 11G (XE).
        #     url = "jdbc:oracle:thin:@localhost:1521:XE"
        #     driver = oracle.jdbc.driver.OracleDriver
        #     username = nlpcraft
        #     password = nlpcraft
        # }

        jdbc {
            # Ignite JDBC URL and driver.
            url = "jdbc:ignite:thin://127.0.0.1/nlpcraft"
            driver = org.apache.ignite.IgniteJdbcThinDriver
            # username =
            # password =
        }

        c3p0 {
            maxStatements = 180

            pool {
                initSize = 10
                minSize = 1
                maxSize = 50
                acquireIncrement = 2
            }
        }
    }

    # REST server configuration.
    rest {
        host = localhost
        port = 8081
    }

    # User manager configuration.
    user {
        pwdPoolBlowup = 3
        timeoutScannerFreqMins = 1
        accessTokenExpireTimeoutMins = 60
    }

    # Plugin manager configuration.
    plugins {
        notification = "org.nlpcraft.server.notification.plugins.noop.NCNoopNotificationPlugin"
        probe {
            auth = "org.nlpcraft.server.probe.plugins.auth.basic.NCBasicProbeAuthenticationPlugin"
        }
    }

    # 'NCRestPushNotificationPlugin' configuration.
    # org.nlpcraft.server.notification.plugins.restpush.NCRestPushNotificationPlugin {
    #     flushSecs = 5
    #     maxBufferSize = 10000
    #     batchSize = 50
    #     endpoints = []
    # }

    # 'NCBasicProbeAuthenticationPlugin' configuration.
    org.nlpcraft.server.probe.plugins.auth.basic.NCBasicProbeAuthenticationPlugin {
        # NOTE: this probe token should match the probe token in the probe.
        probe.token = "3141592653589793" # This is a default probe token (should be same in probe.conf files by default).
    }

    # Probe manager configuration.
    probe {
        links {
            # Default endpoints.
            # If changed - they need to be changed on both server and probes.
            upLink = "localhost:8201" # Server to probe data pipe.
            downLink = "localhost:8202" # Probe to server data pipe.
        }

        pingTimeoutMs = 2000
        soTimeoutMs = 5000
        reconnectTimeoutMs = 5000
        poolSize = 100
    }

    # Endpoint manager configuration.
    endpoint {
        queue {
            # Maximum queue size for all users.
            maxSize = 100000
            # Maximum queue size configuration for each user.
            maxPerUserSize = 1000
            # Period for queue size limit check.
            checkPeriodMins = 5
        }

        // Sending delays (attempt by attempt) if previous sending was not succesfull. Fibonacci numbers.
        // Last delay used until `lifetimeMins` expired.
        delaysSecs = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144]

        # Life time. Time which message is trying to be sent (1 day).
        lifetimeMins = 1440
    }

    // Supported values: opennlp, stanford.
    // Note, that if `stanford` engine is used,
    // it is necessary to add all stanford related dependencies (core and models jars) into your project.
    // See pom.xml file to find used stanford version.
    nlp.engine = "opennlp"
}

# Akka configuration.
akka.http.server.remote-address-header=on